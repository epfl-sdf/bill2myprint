# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-05-03 13:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uniflow.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccesscontrollistsT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
            ],
            options={
                'db_table': 'AccessControlLists_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accreds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sciper', models.CharField(blank=True, db_column='Sciper', max_length=6, null=True)),
                ('unit', models.CharField(blank=True, db_column='Unit', max_length=32, null=True)),
                ('cf', models.CharField(blank=True, db_column='CF', max_length=6, null=True)),
                ('hierarchie', models.CharField(blank=True, db_column='Hierarchie', max_length=128, null=True)),
                ('priceprofile', models.CharField(blank=True, db_column='PriceProfile', max_length=16, null=True)),
                ('defaultcf', models.SmallIntegerField(blank=True, db_column='DefaultCF', null=True)),
            ],
            options={
                'db_table': 'Accreds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccredsOld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sciper', models.CharField(blank=True, db_column='Sciper', max_length=6, null=True)),
                ('unit', models.CharField(blank=True, db_column='Unit', max_length=32, null=True)),
                ('cf', models.CharField(blank=True, db_column='CF', max_length=6, null=True)),
                ('hierarchie', models.CharField(blank=True, db_column='Hierarchie', max_length=128, null=True)),
                ('priceprofile', models.CharField(blank=True, db_column='PriceProfile', max_length=16, null=True)),
                ('defaultcf', models.SmallIntegerField(blank=True, db_column='DefaultCF', null=True)),
            ],
            options={
                'db_table': 'Accreds_old',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActiveprintjobsT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
            ],
            options={
                'db_table': 'ActivePrintJobs_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllowedcostcentersT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(db_column='UserID', max_length=36)),
                ('costcenterid', models.CharField(blank=True, db_column='CostCenterID', max_length=36, null=True)),
            ],
            options={
                'db_table': 'AllowedCostCenters_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArchivedjobsT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('cardinality', models.IntegerField(blank=True, db_column='Cardinality', null=True)),
                ('amountpaid', models.FloatField(blank=True, db_column='AmountPaid', null=True)),
                ('jobname', models.CharField(blank=True, db_column='JobName', max_length=250, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ArchivedJobs_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveentryT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('jobid', models.CharField(db_column='JobID', max_length=36)),
                ('parententry', models.CharField(blank=True, db_column='ParentEntry', max_length=36, null=True)),
                ('orderinparent', models.IntegerField(blank=True, db_column='OrderInParent', null=True)),
                ('timearchived', models.DateTimeField(blank=True, db_column='TimeArchived', null=True)),
                ('timeexpiring', models.DateTimeField(blank=True, db_column='TimeExpiring', null=True)),
                ('archiveflags', models.IntegerField(blank=True, db_column='ArchiveFlags', null=True)),
            ],
            options={
                'db_table': 'ArchiveEntry_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveindicesT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.CharField(blank=True, db_column='IndexID', max_length=36, null=True)),
                ('indextype', models.IntegerField(db_column='IndexType')),
                ('value', models.CharField(blank=True, db_column='Value', max_length=100, null=True)),
                ('archiveentry', models.CharField(db_column='ArchiveEntry', max_length=36)),
                ('parent', models.CharField(blank=True, db_column='Parent', max_length=36, null=True)),
                ('timeexpiring', models.DateTimeField(blank=True, db_column='TimeExpiring', null=True)),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('acl', models.CharField(blank=True, db_column='ACL', max_length=36, null=True)),
                ('syncflag', models.IntegerField(blank=True, db_column='SyncFlag', null=True)),
            ],
            options={
                'db_table': 'ArchiveIndices_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasystemlogT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entrytime', models.DateTimeField(db_column='EntryTime')),
                ('entrytype', models.IntegerField(blank=True, db_column='EntryType', null=True)),
                ('jobid', models.CharField(blank=True, db_column='JobID', max_length=36, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=150, null=True)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('servername', models.CharField(blank=True, db_column='ServerName', max_length=50, null=True)),
                ('logdata1', models.CharField(blank=True, db_column='LogData1', max_length=150, null=True)),
                ('logdata2', models.CharField(blank=True, db_column='LogData2', max_length=150, null=True)),
                ('entryid', models.IntegerField(blank=True, db_column='EntryID', null=True)),
            ],
            options={
                'db_table': 'BaSystemLog_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Camipro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sciper', models.CharField(blank=True, db_column='Sciper', max_length=6, null=True)),
                ('cardid', models.CharField(blank=True, db_column='CardId', max_length=16, null=True)),
            ],
            options={
                'db_table': 'Camipro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CamiproOld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sciper', models.CharField(blank=True, db_column='Sciper', max_length=6, null=True)),
                ('cardid', models.CharField(blank=True, db_column='CardId', max_length=16, null=True)),
            ],
            options={
                'db_table': 'Camipro_old',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Centrefraisunite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cf', models.CharField(blank=True, db_column='CF', max_length=6, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32, null=True)),
                ('invoice', models.CharField(blank=True, db_column='Invoice', max_length=1, null=True)),
                ('manager', models.CharField(blank=True, db_column='Manager', max_length=6, null=True)),
                ('deputy', models.CharField(blank=True, db_column='Deputy', max_length=6, null=True)),
                ('hierarchy', models.CharField(blank=True, db_column='Hierarchy', max_length=128, null=True)),
                ('priceprofile', models.CharField(blank=True, db_column='PriceProfile', max_length=16, null=True)),
            ],
            options={
                'db_table': 'CentreFraisUnite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigobjectsT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
            ],
            options={
                'db_table': 'ConfigObjects_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumergrouplinksT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upperlink', models.CharField(db_column='UpperLink', max_length=36)),
                ('lowerlink', models.CharField(db_column='LowerLink', max_length=36)),
            ],
            options={
                'db_table': 'ConsumerGroupLinks_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumeridentitiesT',
            fields=[
                ('id', uniflow.models.StringUUIDField(db_column='ID', primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(db_column='ClassData')),
                ('consumerid', uniflow.models.StringUUIDField(db_column='ConsumerID', primary_key=True)),
                ('identitycategory', models.IntegerField(db_column='IdentityCategory')),
                ('identitytype', models.CharField(blank=True, db_column='IdentityType', max_length=50, null=True)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=255, null=True)),
                ('defaultidentity', models.IntegerField(blank=True, db_column='DefaultIdentity', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('dispositionchecked', models.IntegerField(blank=True, db_column='DispositionChecked', null=True)),
            ],
            options={
                'db_table': 'ConsumerIdentities_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Copernic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sciper', models.CharField(db_column='Sciper', max_length=50)),
                ('unit', models.CharField(db_column='Unit', max_length=50)),
                ('cf', models.CharField(db_column='CF', max_length=50)),
                ('changetype', models.CharField(blank=True, db_column='ChangeType', max_length=50, null=True)),
                ('priceprofile', models.CharField(db_column='PriceProfile', max_length=50)),
                ('defaultcf', models.SmallIntegerField(db_column='DefaultCF')),
            ],
            options={
                'db_table': 'Copernic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Copernic2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sciper', models.CharField(blank=True, db_column='Sciper', max_length=6, null=True)),
                ('unit', models.CharField(blank=True, db_column='Unit', max_length=32, null=True)),
                ('cf', models.CharField(blank=True, db_column='CF', max_length=6, null=True)),
                ('defaultcf', models.CharField(blank=True, db_column='DefaultCF', max_length=1, null=True)),
                ('updated', models.IntegerField(db_column='Updated')),
            ],
            options={
                'db_table': 'Copernic2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CostsavingsT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usagebegin', models.DateTimeField(db_column='UsageBegin')),
                ('usageend', models.DateTimeField(db_column='UsageEnd')),
                ('serviceproviderinput', models.CharField(db_column='ServiceProviderInput', max_length=36)),
                ('serviceprovider', models.CharField(db_column='ServiceProvider', max_length=36)),
                ('serviceconsumer', models.CharField(db_column='ServiceConsumer', max_length=36)),
                ('servconsgroup', models.CharField(db_column='ServConsGroup', max_length=36)),
                ('servconsproject', models.CharField(db_column='ServConsProject', max_length=36)),
                ('jobname', models.CharField(blank=True, db_column='JobName', max_length=250, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('formatcode', models.IntegerField(db_column='FormatCode')),
                ('pages', models.IntegerField(db_column='Pages')),
                ('pagescolor', models.IntegerField(db_column='PagesColor')),
                ('pagesduplex', models.IntegerField(db_column='PagesDuplex')),
                ('costs', models.FloatField(blank=True, db_column='Costs', null=True)),
                ('costssaved', models.FloatField(blank=True, db_column='CostsSaved', null=True)),
                ('costssavedpot', models.FloatField(blank=True, db_column='CostsSavedPot', null=True)),
                ('type', models.IntegerField(db_column='Type')),
                ('typepot', models.IntegerField(db_column='TypePot')),
            ],
            options={
                'db_table': 'CostSavings_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountercheckT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceprovider', models.CharField(db_column='ServiceProvider', max_length=36)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('servicecode', models.IntegerField(blank=True, db_column='ServiceCode', null=True)),
                ('counterorigin', models.IntegerField(blank=True, db_column='CounterOrigin', null=True)),
                ('value', models.IntegerField(blank=True, db_column='Value', null=True)),
            ],
            options={
                'db_table': 'CounterCheck_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventsT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(db_column='Time')),
                ('device', models.CharField(db_column='Device', max_length=36)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=50, null=True)),
                ('devicetype', models.IntegerField(blank=True, db_column='DeviceType', null=True)),
                ('eventtype', models.IntegerField(blank=True, db_column='EventType', null=True)),
                ('status', models.IntegerField(blank=True, db_column='Status', null=True)),
                ('statusex', models.CharField(blank=True, db_column='StatusEx', max_length=64, null=True)),
                ('statuschange', models.CharField(blank=True, db_column='StatusChange', max_length=64, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=150, null=True)),
                ('assocentity', models.CharField(blank=True, db_column='AssocEntity', max_length=50, null=True)),
                ('totalcounter', models.IntegerField(blank=True, db_column='TotalCounter', null=True)),
                ('manufacturerinfo', models.CharField(blank=True, db_column='ManufacturerInfo', max_length=150, null=True)),
                ('systemservername', models.CharField(blank=True, db_column='SystemServerName', max_length=150, null=True)),
            ],
            options={
                'db_table': 'Events_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MomsystemtasksT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=50, null=True)),
                ('lastexecution', models.DateTimeField(blank=True, db_column='LastExecution', null=True)),
                ('nextexecution', models.DateTimeField(blank=True, db_column='NextExecution', null=True)),
                ('lastexecutionresult', models.IntegerField(blank=True, db_column='LastExecutionResult', null=True)),
                ('lasterror', models.CharField(blank=True, db_column='LastError', max_length=50, null=True)),
                ('machinename', models.CharField(blank=True, db_column='MachineName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'MomSystemTasks_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjecthistoryT',
            fields=[
                ('version', models.BigIntegerField(db_column='Version')),
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('parentid', models.CharField(blank=True, db_column='ParentID', max_length=36, null=True)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('objecttype', models.CharField(blank=True, db_column='ObjectType', max_length=50, null=True)),
                ('objectname', models.CharField(blank=True, db_column='ObjectName', max_length=50, null=True)),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('modifiedby', models.CharField(blank=True, db_column='ModifiedBy', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=1024, null=True)),
            ],
            options={
                'db_table': 'ObjectHistory_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderitemsT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('orderid', models.CharField(db_column='OrderID', max_length=36)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('amountpaid', models.FloatField(blank=True, db_column='AmountPaid', null=True)),
                ('copycount', models.IntegerField(blank=True, db_column='CopyCount', null=True)),
                ('vat', models.FloatField(blank=True, db_column='VAT', null=True)),
                ('pricedetailtext', models.CharField(blank=True, db_column='PriceDetailText', max_length=2048, null=True)),
                ('producttype', models.IntegerField(blank=True, db_column='ProductType', null=True)),
                ('queuename', models.CharField(blank=True, db_column='QueueName', max_length=250, null=True)),
            ],
            options={
                'db_table': 'OrderItems_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time')),
                ('userid', models.CharField(db_column='UserID', max_length=36)),
                ('number', models.CharField(blank=True, db_column='Number', max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, db_column='Status', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('cardtransaction', models.CharField(blank=True, db_column='CardTransaction', max_length=36, null=True)),
                ('paymentmethod', models.CharField(blank=True, db_column='PaymentMethod', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Order_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeersT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
            ],
            options={
                'db_table': 'Peers_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrinterclusterT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('momsyncflag', models.NullBooleanField(db_column='MomSyncFlag')),
                ('clusterrole', models.IntegerField(blank=True, db_column='ClusterRole', null=True)),
                ('productfamily', models.IntegerField(blank=True, db_column='ProductFamily', null=True)),
            ],
            options={
                'db_table': 'PrinterCluster_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrintjobhistoryT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobid', models.CharField(db_column='JobID', max_length=36)),
                ('time', models.DateTimeField(db_column='Time')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=50, null=True)),
                ('oldvalue', models.CharField(blank=True, db_column='OldValue', max_length=250, null=True)),
                ('newvalue', models.CharField(blank=True, db_column='NewValue', max_length=250, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=250, null=True)),
            ],
            options={
                'db_table': 'PrintJobHistory_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactglobalid', models.CharField(blank=True, db_column='TransactGlobalID', max_length=36, null=True)),
                ('jobdate', models.DateTimeField(blank=True, db_column='JobDate', null=True)),
                ('resourcetype', models.CharField(db_column='ResourceType', max_length=2)),
                ('pgecnt', models.IntegerField(blank=True, db_column='PgeCnt', null=True)),
                ('cost', models.FloatField(blank=True, db_column='Cost', null=True)),
                ('costcoloured', models.FloatField(blank=True, db_column='CostColoured', null=True)),
                ('costbw', models.FloatField(blank=True, db_column='CostBW', null=True)),
                ('pagescoloured', models.IntegerField(blank=True, db_column='PagesColoured', null=True)),
                ('pagesbw', models.IntegerField(blank=True, db_column='PagesBW', null=True)),
                ('completepgecnt', models.IntegerField(blank=True, db_column='CompletePgeCnt', null=True)),
                ('pagesa4', models.IntegerField(blank=True, db_column='PagesA4', null=True)),
                ('pagesa3', models.IntegerField(blank=True, db_column='PagesA3', null=True)),
                ('pagesother', models.IntegerField(blank=True, db_column='PagesOther', null=True)),
                ('cc', models.CharField(blank=True, db_column='CC', max_length=50, null=True)),
                ('ccdesc', models.CharField(blank=True, db_column='CCDesc', max_length=50, null=True)),
                ('ccid', models.CharField(blank=True, db_column='CCID', max_length=36, null=True)),
                ('invoiceflag', models.CharField(blank=True, db_column='InvoiceFlag', max_length=20, null=True)),
            ],
            options={
                'db_table': 'ReportData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceconsumerT',
            fields=[
                ('id', uniflow.models.StringUUIDField(db_column='ID', primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('login', models.CharField(blank=True, db_column='Login', max_length=50, null=True)),
                ('defaultgroupid', uniflow.models.StringUUIDField(blank=True, db_column='DefaultGroupID', null=True)),
                ('usertypeex', models.IntegerField(blank=True, db_column='UserTypeEx', null=True)),
                ('payconid', models.CharField(blank=True, db_column='PayConID', max_length=50, null=True)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=20, null=True)),
                ('addressone', models.CharField(blank=True, db_column='AddressOne', max_length=50, null=True)),
                ('addresstwo', models.CharField(blank=True, db_column='AddressTwo', max_length=100, null=True)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=20, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=50, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=50, null=True)),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=250, null=True)),
                ('defaultcostcenter', uniflow.models.StringUUIDField(blank=True, db_column='DefaultCostCenter', null=True)),
                ('hasbiodata', models.IntegerField(blank=True, db_column='HasBioData', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('emergencyaccountflag', models.NullBooleanField(db_column='EmergencyAccountFlag')),
                ('cslogininfo', models.CharField(blank=True, db_column='CsLoginInfo', max_length=50, null=True)),
                ('sapname', models.CharField(blank=True, db_column='SAPName', max_length=50, null=True)),
                ('pincodehash', models.CharField(blank=True, db_column='PinCodeHash', max_length=80, null=True)),
                ('momsyncflag', models.NullBooleanField(db_column='MomSyncFlag')),
                ('linkedconsumerid', uniflow.models.StringUUIDField(blank=True, db_column='LinkedConsumerID', null=True)),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('customprop_igstatus', models.CharField(blank=True, db_column='CustomProp_IGStatus', max_length=5, null=True)),
                ('customprop_iglogin', models.CharField(blank=True, db_column='CustomProp_IGLOGIN', max_length=50, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=10, null=True)),
                ('hierarchyposition', uniflow.models.StringUUIDField(blank=True, db_column='HierarchyPosition', null=True)),
                ('forcedrilldown', models.IntegerField(blank=True, db_column='ForceDrillDown', null=True)),
                ('emailaddress', models.CharField(blank=True, db_column='EmailAddress', max_length=50, null=True)),
                ('objectcontainerversion', models.IntegerField(blank=True, db_column='OBJECTCONTAINERVERSION', null=True)),
            ],
            options={
                'db_table': 'ServiceConsumer_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceproviderT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('payconserialno', models.CharField(blank=True, db_column='PayConSerialNo', max_length=50, null=True)),
                ('displayindex', models.IntegerField(blank=True, db_column='DisplayIndex', null=True)),
                ('printername', models.CharField(blank=True, db_column='PrinterName', max_length=150, null=True)),
                ('routinggroup', models.CharField(blank=True, db_column='RoutingGroup', max_length=50, null=True)),
                ('servername', models.CharField(blank=True, db_column='ServerName', max_length=50, null=True)),
                ('payconipaddress', models.CharField(blank=True, db_column='PayConIpAddress', max_length=50, null=True)),
                ('providertype', models.IntegerField(blank=True, db_column='ProviderType', null=True)),
                ('pricingprofile', models.CharField(blank=True, db_column='PricingProfile', max_length=36, null=True)),
                ('hideprinterfromwqm', models.IntegerField(blank=True, db_column='HidePrinterFromWqm', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('mgmtdata_customernumber', models.CharField(blank=True, db_column='MgmtData_CustomerNumber', max_length=50, null=True)),
                ('mgmtdata_monthlyvolume', models.CharField(blank=True, db_column='MgmtData_MonthlyVolume', max_length=50, null=True)),
                ('mgmtdata_contractstart', models.CharField(blank=True, db_column='MgmtData_ContractStart', max_length=50, null=True)),
                ('mgmtdata_contractend', models.CharField(blank=True, db_column='MgmtData_ContractEnd', max_length=50, null=True)),
                ('mgmtdata_serial', models.CharField(blank=True, db_column='MgmtData_Serial', max_length=50, null=True)),
                ('mgmtdata_location', models.CharField(blank=True, db_column='MgmtData_Location', max_length=50, null=True)),
                ('mgmtdata_assetnumber', models.CharField(blank=True, db_column='MgmtData_AssetNumber', max_length=50, null=True)),
                ('mgmtdata_hostname', models.CharField(blank=True, db_column='MgmtData_Hostname', max_length=50, null=True)),
                ('mgmtdata_macaddress', models.CharField(blank=True, db_column='MgmtData_MacAddress', max_length=50, null=True)),
                ('mgmtdata_modelname', models.CharField(blank=True, db_column='MgmtData_ModelName', max_length=50, null=True)),
                ('momsyncflag', models.NullBooleanField(db_column='MomSyncFlag')),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('wizardname', models.CharField(blank=True, db_column='WizardName', max_length=50, null=True)),
                ('mgmtdata_manufacturer', models.CharField(blank=True, db_column='MgmtData_Manufacturer', max_length=50, null=True)),
                ('mgmtdata_productfamily', models.CharField(blank=True, db_column='MgmtData_ProductFamily', max_length=3, null=True)),
            ],
            options={
                'db_table': 'ServiceProvider_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceT',
            fields=[
                ('id', uniflow.models.StringUUIDField(db_column='ID', primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('serviceprovider', models.CharField(db_column='ServiceProvider', max_length=36)),
                ('servicecode', models.IntegerField(blank=True, db_column='ServiceCode', null=True)),
                ('providerindex', models.IntegerField(blank=True, db_column='ProviderIndex', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('momsyncflag', models.NullBooleanField(db_column='MomSyncFlag')),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('acl', models.CharField(blank=True, db_column='ACL', max_length=36, null=True)),
                ('jttag', models.CharField(blank=True, db_column='JtTag', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Service_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceusagecontainerinfoT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobid', models.CharField(db_column='JobID', max_length=36)),
                ('jobkey', models.CharField(blank=True, db_column='JobKey', max_length=50, null=True)),
                ('jobvalue', models.CharField(blank=True, db_column='JobValue', max_length=150, null=True)),
            ],
            options={
                'db_table': 'ServiceUsageContainerInfo_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceusageT',
            fields=[
                ('id', uniflow.models.StringUUIDField(db_column='ID', primary_key=True, serialize=False)),
                ('serviceprovider', models.CharField(db_column='ServiceProvider', max_length=36)),
                ('service', models.CharField(blank=True, db_column='Service', max_length=36, null=True)),
                ('cardnumber', models.IntegerField(blank=True, db_column='CardNumber', null=True)),
                ('classdata', models.BinaryField(blank=True, db_column='ClassData', null=True)),
                ('usagebegin', models.DateTimeField(blank=True, db_column='UsageBegin', null=True)),
                ('usageend', models.DateTimeField(blank=True, db_column='UsageEnd', null=True)),
                ('cardinality', models.IntegerField(blank=True, db_column='Cardinality', null=True)),
                ('amountpaid', models.FloatField(blank=True, db_column='AmountPaid', null=True)),
                ('parentservice', models.CharField(blank=True, db_column='ParentService', max_length=36, null=True)),
                ('jobname', models.CharField(blank=True, db_column='JobName', max_length=250, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('streamversion', models.CharField(blank=True, db_column='StreamVersion', max_length=30, null=True)),
                ('jobticketfield', models.CharField(blank=True, db_column='JobTicketField', max_length=60, null=True)),
                ('jobticketfieldtwo', models.CharField(blank=True, db_column='JobTicketFieldTwo', max_length=60, null=True)),
                ('jobticketfieldthree', models.CharField(blank=True, db_column='JobTicketFieldThree', max_length=60, null=True)),
                ('copycount', models.IntegerField(blank=True, db_column='CopyCount', null=True)),
                ('nonchargeable', models.IntegerField(blank=True, db_column='NonChargeable', null=True)),
                ('nonchargereason', models.CharField(blank=True, db_column='NonChargeReason', max_length=255, null=True)),
                ('momsyncflag', models.NullBooleanField(db_column='MomSyncFlag')),
                ('altprice0', models.FloatField(blank=True, db_column='AltPrice0', null=True)),
                ('altprice1', models.FloatField(blank=True, db_column='AltPrice1', null=True)),
                ('altprice2', models.FloatField(blank=True, db_column='AltPrice2', null=True)),
                ('costsavings', models.FloatField(blank=True, db_column='CostSavings', null=True)),
                ('cpcajobid', models.CharField(blank=True, db_column='CpcaJobID', max_length=30, null=True)),
                ('costcenterpath', models.CharField(blank=True, db_column='CostCenterPath', max_length=512, null=True)),
                ('jobsettings_cloneof', models.CharField(blank=True, db_column='JobSettings_CloneOf', max_length=38, null=True)),
            ],
            options={
                'db_table': 'ServiceUsage_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SinglerowstatT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entrytime', models.DateTimeField(db_column='EntryTime')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=15, null=True)),
                ('jobname', models.CharField(blank=True, db_column='JobName', max_length=250, null=True)),
                ('printername', models.CharField(blank=True, db_column='PrinterName', max_length=20, null=True)),
                ('servername', models.CharField(blank=True, db_column='ServerName', max_length=20, null=True)),
                ('formatcode', models.IntegerField(db_column='FormatCode')),
                ('totalpages', models.IntegerField(db_column='TotalPages')),
                ('duplexpages', models.IntegerField(db_column='DuplexPages')),
                ('colorpages', models.IntegerField(db_column='ColorPages')),
                ('inputtray', models.SmallIntegerField(db_column='InputTray')),
            ],
            options={
                'db_table': 'SingleRowStat_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VendingtransactionsT',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=36, primary_key=True, serialize=False)),
                ('classdata', models.BinaryField(db_column='ClassData')),
                ('consumerid', models.CharField(db_column='ConsumerID', max_length=36)),
            ],
            options={
                'db_table': 'VendingTransactions_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BudgettransactionsT',
            fields=[
                ('transactiontime', models.DateTimeField(db_column='TransactionTime', primary_key=True, serialize=False)),
                ('transactiontype', models.IntegerField(db_column='TransactionType')),
                ('amount', models.FloatField(blank=True, db_column='Amount', null=True)),
                ('service', models.ForeignKey(db_column='Service', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='uniflow.ServiceT')),
                ('serviceusage', uniflow.models.StringUUIDField(blank=True, db_column='ServiceUsage', null=True)),
                ('transactiondata', models.CharField(blank=True, db_column='TransactionData', max_length=100, null=True)),
            ],
            options={
                'db_table': 'BudgetTransactions_T',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupmembershipT',
            fields=[
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='groupmembershipt_user_set', serialize=False, to='uniflow.ServiceconsumerT')),
            ],
            options={
                'db_table': 'GroupMembership_T',
                'managed': False,
            },
        ),
    ]
